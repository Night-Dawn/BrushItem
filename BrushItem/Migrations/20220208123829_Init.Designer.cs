// <auto-generated />
using System;
using BrushItem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BrushItem.Migrations
{
    [DbContext(typeof(BrushDbContext))]
    [Migration("20220208123829_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("BrushItem.Shared.Entities.Blank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasComment("题目编号");

                    b.Property<string>("Analysis")
                        .HasColumnType("longtext")
                        .HasComment("题目分析");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CorrectAnswer")
                        .HasColumnType("longtext")
                        .HasComment("正确答案");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasComment("题目描述");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Blanks");
                });

            modelBuilder.Entity("BrushItem.Shared.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("BrushItem.Shared.Entities.MultipleChoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasComment("题目编号");

                    b.Property<string>("Analysis")
                        .HasColumnType("longtext")
                        .HasComment("题目分析");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CorrectAnswer")
                        .HasColumnType("longtext")
                        .HasComment("正确答案");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasComment("题目描述");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("更新时间");

                    b.Property<string>("optionA")
                        .HasColumnType("longtext")
                        .HasComment("选项A");

                    b.Property<string>("optionB")
                        .HasColumnType("longtext")
                        .HasComment("选项B");

                    b.Property<string>("optionC")
                        .HasColumnType("longtext")
                        .HasComment("选项C");

                    b.Property<string>("optionD")
                        .HasColumnType("longtext")
                        .HasComment("选项D");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("choice");
                });

            modelBuilder.Entity("BrushItem.Shared.Entities.SingleChoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasComment("题目编号");

                    b.Property<string>("Analysis")
                        .HasColumnType("longtext")
                        .HasComment("题目分析");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CorrectAnswer")
                        .HasColumnType("longtext")
                        .HasComment("正确答案");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasComment("题目描述");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("更新时间");

                    b.Property<string>("optionA")
                        .HasColumnType("longtext")
                        .HasComment("选项A");

                    b.Property<string>("optionB")
                        .HasColumnType("longtext")
                        .HasComment("选项B");

                    b.Property<string>("optionC")
                        .HasColumnType("longtext")
                        .HasComment("选项C");

                    b.Property<string>("optionD")
                        .HasColumnType("longtext")
                        .HasComment("选项D");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SingleChoices");
                });

            modelBuilder.Entity("BrushItem.Shared.Entities.Blank", b =>
                {
                    b.HasOne("BrushItem.Shared.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BrushItem.Shared.Entities.MultipleChoice", b =>
                {
                    b.HasOne("BrushItem.Shared.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BrushItem.Shared.Entities.SingleChoice", b =>
                {
                    b.HasOne("BrushItem.Shared.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
